module BPWS_11 #(
    parameter KEY_WIDTH = 16,
    parameter DEPTH = 16
)(
    input clk,
    input rst,
    input write_en,
    input [$clog2(DEPTH)-1:0] write_addr,
    input [KEY_WIDTH-1:0] write_data,
    input [KEY_WIDTH-1:0] search_key,
    input [KEY_WIDTH-1:0] xmask,
    input search_en,
    input sort_en,
    output reg [$clog2(DEPTH)-1:0] match_addr,
    output reg match_found,
    output done_sort
);

    reg [KEY_WIDTH-1:0] mem [0:DEPTH-1];
    reg [KEY_WIDTH-1:0] sorted_mem [0:DEPTH-1];

    wire [0:DEPTH*KEY_WIDTH-1] unsorted_data;
    wire [0:DEPTH*KEY_WIDTH-1] sorted_data;
    wire [0:DEPTH*$clog2(DEPTH)-1] sorted_indices;

    genvar u;
    generate
        for (u = 0; u < DEPTH; u = u + 1) begin
            assign unsorted_data[u*KEY_WIDTH +: KEY_WIDTH] = mem[u];
        end
    endgenerate

    integer i;
    always @(posedge clk) begin
        if (rst) begin
            for (i = 0; i < DEPTH; i = i + 1)
                mem[i] <= 0;
        end else if (write_en) begin
            mem[write_addr] <= write_data;
        end
    end

    Sorting_33 #(
        .DATA_WIDTH(KEY_WIDTH),
        .NUM_ELEMS(DEPTH),
        .INDEX_WIDTH($clog2(DEPTH))
    ) sorter (
        .clk(clk),
        .rst(rst),
        .start(sort_en),
        .unsorted_data(unsorted_data),
        .sorted_data(sorted_data),
        .sorted_indices(sorted_indices),
        .done(done_sort)
    );
    
    always@(posedge clk) begin
        if(done_sort)begin
            for(i=0;i<DEPTH;i=i+1)
                sorted_mem[i]<=sorted_data[i*KEY_WIDTH +:KEY_WIDTH];
        end
    end

    wire match_lines [0:DEPTH-1];
    genvar idx;
    generate
        for (idx = 0; idx < DEPTH; idx = idx + 1) begin: match_gen
            tcam_line44 #(.KEY_WIDTH(KEY_WIDTH)) line_inst (
                .key(search_key),
                .stored_key(mem[idx]), // ? use `idx` not `i`
                .xmask(xmask),
                .match(match_lines[idx])
            );
        end
    endgenerate

    always @(posedge clk) begin
        match_found <= 0;
        match_addr <= 0;
        for (i = 0; i < DEPTH; i = i + 1) begin
            if (search_en && match_lines[i]) begin
                match_found <= 1;
                match_addr <= i[$clog2(DEPTH)-1:0];
            end
        end
    end

endmodule

module tcam_line44 #(parameter KEY_WIDTH=16)
(
input [KEY_WIDTH-1:0]key,
input [KEY_WIDTH-1:0]xmask,
input [KEY_WIDTH-1:0]stored_key,
output match
);
assign match= ~|((key ^ stored_key) & ~xmask);
endmodule
